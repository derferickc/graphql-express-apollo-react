{"ast":null,"code":"var _jsxFileName = \"/Users/choef/Documents/spacex_launch_stats/client/src/components/Launch.js\";\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport className from 'classnames';\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_date_local\n            launch_success\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`;\nexport default function Launch(props) {\n  let {\n    flight_numberz\n  } = props.match.params;\n  flight_numberz = parseInt(flight_numberz);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LAUNCHES_QUERY, {\n    variables: {\n      flight_numberz\n    }\n  }); // const {\n  //     mission_name,\n  //     flight_number,\n  //     launch_year,\n  //     launch_success,\n  //     rocket: { rocket_id, rocket_name, rocket_type }\n  // } = data.launch\n\n  if (loading) return /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }\n  }, \"Error: \", error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-body mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Mission: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 53\n    }\n  }, data.launch.mission_name)));\n}","map":{"version":3,"sources":["/Users/choef/Documents/spacex_launch_stats/client/src/components/Launch.js"],"names":["React","gql","useQuery","Link","className","LAUNCHES_QUERY","Launch","props","flight_numberz","match","params","parseInt","loading","error","data","variables","launch","mission_name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,cAAc,GAAGJ,GAAI;;;;;;;;;;;;;;;CAA3B;AAiBA,eAAe,SAASK,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,MAAI;AAAEC,IAAAA;AAAF,MAAqBD,KAAK,CAACE,KAAN,CAAYC,MAArC;AACAF,EAAAA,cAAc,GAAGG,QAAQ,CAACH,cAAD,CAAzB;AAEA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BZ,QAAQ,CAACG,cAAD,EAAiB;AACtDU,IAAAA,SAAS,EAAE;AAAEP,MAAAA;AAAF;AAD2C,GAAjB,CAAzC,CAJkC,CAQlC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAGI,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYA,KAAZ,CAAP;AAEV,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAwC;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BC,IAAI,CAACE,MAAL,CAAYC,YAAzC,CAAxC,CADJ,CADJ;AAKH","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport className from 'classnames'\n\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_date_local\n            launch_success\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`;\n\nexport default function Launch(props) {\n    let { flight_numberz } = props.match.params;\n    flight_numberz = parseInt(flight_numberz);\n    \n    const { loading, error, data } = useQuery(LAUNCHES_QUERY, {\n        variables: { flight_numberz }\n    });\n\n    // const {\n    //     mission_name,\n    //     flight_number,\n    //     launch_year,\n    //     launch_success,\n    //     rocket: { rocket_id, rocket_name, rocket_type }\n    // } = data.launch\n\n    if(loading) return <h4>Loading...</h4>\n    if(error) return <h4>Error: {error}</h4>\n\n    return (\n        <div className=\"card card-body mb-3\">\n            <h1 className=\"display-4 my-3\">Mission: <span className=\"text-dark\">{data.launch.mission_name}</span></h1>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}