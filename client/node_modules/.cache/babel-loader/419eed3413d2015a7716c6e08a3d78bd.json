{"ast":null,"code":"var _jsxFileName = \"/Users/choef/Documents/spacex_launch_stats/client/src/components/Launches.js\";\nimport React, { Component, Fragment } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport LaunchItem from './Launchitem';\nimport MissionKey from './Missionkey';\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\nexport default function Launches() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LAUNCHES_QUERY);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MissionKey, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), loading.length > 0 && /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"Loading...\"), \"}\");\n}","map":{"version":3,"sources":["/Users/choef/Documents/spacex_launch_stats/client/src/components/Launches.js"],"names":["React","Component","Fragment","gql","useQuery","LaunchItem","MissionKey","LAUNCHES_QUERY","Launches","loading","error","data","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,cAAc,GAAGJ,GAAI;;;;;;;;;CAA3B;AAWA,eAAe,SAASK,QAAT,GAAoB;AAC/B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACG,cAAD,CAAzC;AAEA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKE,OAAO,CAACG,MAAR,GAAiB,CAAjB,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR,MADJ;AAmBH","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { gql, useQuery } from '@apollo/client';\nimport LaunchItem from './Launchitem';\nimport MissionKey from './Missionkey';\n\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nexport default function Launches() {\n    const { loading, error, data } = useQuery(LAUNCHES_QUERY);\n\n    return (\n        <React.Fragment>\n            <MissionKey />\n            {loading.length > 0 &&\n                <h4>Loading...</h4>\n            }\n            {/* {error &&\n                <h4>Error: {error}</h4> */}\n            }\n            {/* {\n                data.launches.map((launch) => (\n                    <LaunchItem\n                        key={launch.flight_number}\n                        launch={launch}\n                    />\n                ))\n            } */}\n        </React.Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}