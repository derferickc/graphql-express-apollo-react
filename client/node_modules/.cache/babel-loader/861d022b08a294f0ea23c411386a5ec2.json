{"ast":null,"code":"var _jsxFileName = \"/Users/choef/Documents/spacex_launch_stats/client/src/components/Launches.js\";\nimport React, { Component, Fragment } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport LaunchItem from './Launchitem';\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_numberz\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nfunction Launches() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LAUNCHES_QUERY);\n  if (loading) return /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 24\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, data.launches.map(launch => /*#__PURE__*/React.createElement(LaunchItem, {\n    key: launch.flight_number,\n    launch: launch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default Launches;","map":{"version":3,"sources":["/Users/choef/Documents/spacex_launch_stats/client/src/components/Launches.js"],"names":["React","Component","Fragment","gql","useQuery","LaunchItem","LAUNCHES_QUERY","Launches","loading","error","data","launches","map","launch","flight_number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,cAAc,GAAGH,GAAI;;;;;;;;;CAA3B;;AAWA,SAASI,QAAT,GAAoB;AAChB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,cAAD,CAAzC;AAEA,MAAGE,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CAAP;AAEV,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAmBC,MAAD,iBACd,oBAAC,UAAD;AACI,IAAA,GAAG,EAAEA,MAAM,CAACC,aADhB;AAEI,IAAA,MAAM,EAAED,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,CADJ;AAYH;;AAED,eAAeN,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { gql, useQuery } from '@apollo/client';\nimport LaunchItem from './Launchitem';\n\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_numberz\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nfunction Launches() {\n    const { loading, error, data } = useQuery(LAUNCHES_QUERY);\n\n    if(loading) return <h4>Loading...</h4>\n    if(error) return <h4>{error}</h4>\n\n    return (\n        <React.Fragment>\n            {\n                data.launches.map((launch) => (\n                    <LaunchItem\n                        key={launch.flight_number}\n                        launch={launch}\n                    />\n                ))\n            }\n        </React.Fragment>\n    )\n}\n\nexport default Launches"]},"metadata":{},"sourceType":"module"}