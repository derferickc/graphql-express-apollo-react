{"ast":null,"code":"var _jsxFileName = \"/Users/choef/Documents/spacex_launch_stats/client/src/components/Launch.js\";\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport className from 'classnames';\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_date_local\n            launch_success\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`;\nexport default function Launch(props) {\n  let {\n    flight_number\n  } = props.match.params;\n  flight_number = parseInt(flight_number);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LAUNCHES_QUERY, {\n    variables: {\n      flight_number\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 24\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }\n  }, \"Error: \", error);\n  const {\n    mission_name,\n    flight_numberz,\n    launch_year,\n    launch_success,\n    rocket: {\n      rocket_id,\n      rocket_name,\n      rocket_type\n    }\n  } = data.launch;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-body mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Mission: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 53\n    }\n  }, data.launch.mission_name)));\n}","map":{"version":3,"sources":["/Users/choef/Documents/spacex_launch_stats/client/src/components/Launch.js"],"names":["React","gql","useQuery","Link","className","LAUNCHES_QUERY","Launch","props","flight_number","match","params","parseInt","loading","error","data","variables","mission_name","flight_numberz","launch_year","launch_success","rocket","rocket_id","rocket_name","rocket_type","launch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,cAAc,GAAGJ,GAAI;;;;;;;;;;;;;;;CAA3B;AAiBA,eAAe,SAASK,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,MAAI;AAAEC,IAAAA;AAAF,MAAoBD,KAAK,CAACE,KAAN,CAAYC,MAApC;AACAF,EAAAA,aAAa,GAAGG,QAAQ,CAACH,aAAD,CAAxB;AAEA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BZ,QAAQ,CAACG,cAAD,EAAiB;AACtDU,IAAAA,SAAS,EAAE;AAAEP,MAAAA;AAAF;AAD2C,GAAjB,CAAzC;AAIA,MAAGI,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYA,KAAZ,CAAP;AACV,QAAM;AACFG,IAAAA,YADE;AAEFC,IAAAA,cAFE;AAGFC,IAAAA,WAHE;AAIFC,IAAAA,cAJE;AAKFC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,WAAb;AAA0BC,MAAAA;AAA1B;AALN,MAMFT,IAAI,CAACU,MANT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAwC;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BV,IAAI,CAACU,MAAL,CAAYR,YAAzC,CAAxC,CADJ,CADJ;AAKH","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport className from 'classnames'\n\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_date_local\n            launch_success\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`;\n\nexport default function Launch(props) {\n    let { flight_number } = props.match.params;\n    flight_number = parseInt(flight_number);\n    \n    const { loading, error, data } = useQuery(LAUNCHES_QUERY, {\n        variables: { flight_number }\n    });\n\n    if(loading) return <h4>Loading...</h4>\n    if(error) return <h4>Error: {error}</h4>\n    const {\n        mission_name,\n        flight_numberz,\n        launch_year,\n        launch_success,\n        rocket: { rocket_id, rocket_name, rocket_type}\n    } = data.launch\n\n    return (\n        <div className=\"card card-body mb-3\">\n            <h1 className=\"display-4 my-3\">Mission: <span className=\"text-dark\">{data.launch.mission_name}</span></h1>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}